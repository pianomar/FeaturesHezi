{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StartGameScreen = function StartGameScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var handlerInputNumber = function handlerInputNumber(text) {\n    setEnteredValue(text.replace(/[^0-9]/g, ''));\n  };\n\n  var handlerResetInput = setEnteredValue('');\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsxs(View, {\n      style: styles.screen,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Comienza el juego\"\n      }), _jsxs(Card, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          children: \"Elija un numero\"\n        }), _jsx(Input, {\n          style: styles.input,\n          blurOnSubmit: true,\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          keyboardType: \"numeric\",\n          maxLength: 2,\n          value: enteredValue,\n          onChangeText: handlerInputNumber\n        }), _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(Button, {\n            tsitle: \"Limpiar\",\n            onPress: function onPress() {\n              return handlerResetInput();\n            },\n            color: Colors.accent\n          }), _jsx(Button, {\n            title: \"Confirmar\",\n            onPress: function onPress() {},\n            color: Colors.primary\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    height: '15%',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  input: {\n    width: '20%',\n    textAlign: 'center',\n    fontSize: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"names":["React","useState","Card","Colors","Input","StartGameScreen","enteredValue","setEnteredValue","handlerInputNumber","text","replace","handlerResetInput","Keyboard","dismiss","styles","screen","title","inputContainer","input","buttonContainer","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","height","justifyContent","textAlign","flexDirection","paddingHorizontal"],"sources":["D:/Omar/Work/React/comision29865/pages/StartGameScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet , Button, TouchableWithoutFeedback, Keyboard } from 'react-native'\r\nimport Card from '../components/Card'\r\nimport Colors from '../constants/colors'\r\nimport Input from '../components/Input'\r\n\r\nconst StartGameScreen = () => {\r\n\r\n    const [enteredValue, setEnteredValue] = useState('')\r\n    const handlerInputNumber = text => {\r\n        setEnteredValue(text.replace(/[^0-9]/g, ''))\r\n    }\r\n\r\n    const handlerResetInput = setEnteredValue('')\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n            <View style={styles.screen}>\r\n                <Text style={styles.title}>Comienza el juego</Text>\r\n                <Card style={styles.inputContainer}>\r\n                    <Text>Elija un numero</Text>\r\n                    <Input \r\n                        style={styles.input}\r\n                        blurOnSubmit\r\n                        autoCapitalize='none'\r\n                        autoCorrect={false}\r\n                        keyboardType='numeric'\r\n                        maxLength={2}\r\n                        value={enteredValue}\r\n                        onChangeText={handlerInputNumber}\r\n                    />\r\n                    <View style={styles.buttonContainer}>\r\n                        <Button tsitle='Limpiar' onPress={() => handlerResetInput()} color={Colors.accent} />\r\n                        <Button title='Confirmar' onPress={() => {}} color={Colors.primary}/>\r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10,\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginVertical: 10,\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n        maxWidth: '80%',\r\n        height: '15%',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n    },\r\n    input: {\r\n        width: '20%',\r\n        textAlign: 'center',\r\n        fontSize: 20,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 15,\r\n    },\r\n})\r\n\r\nexport default StartGameScreen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EAE1B,gBAAwCJ,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI,EAAI;IAC/BF,eAAe,CAACE,IAAI,CAACC,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAD,CAAf;EACH,CAFD;;EAIA,IAAMC,iBAAiB,GAAGJ,eAAe,CAAC,EAAD,CAAzC;EAEA,OACI,KAAC,wBAAD;IAA0B,OAAO,EAAE;MAAA,OAAMK,QAAQ,CAACC,OAAT,EAAN;IAAA,CAAnC;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACC,MAApB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,KAApB;QAAA;MAAA,EADJ,EAEI,MAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACG,cAApB;QAAA,WACI,KAAC,IAAD;UAAA;QAAA,EADJ,EAEI,KAAC,KAAD;UACI,KAAK,EAAEH,MAAM,CAACI,KADlB;UAEI,YAAY,MAFhB;UAGI,cAAc,EAAC,MAHnB;UAII,WAAW,EAAE,KAJjB;UAKI,YAAY,EAAC,SALjB;UAMI,SAAS,EAAE,CANf;UAOI,KAAK,EAAEZ,YAPX;UAQI,YAAY,EAAEE;QARlB,EAFJ,EAYI,MAAC,IAAD;UAAM,KAAK,EAAEM,MAAM,CAACK,eAApB;UAAA,WACI,KAAC,MAAD;YAAQ,MAAM,EAAC,SAAf;YAAyB,OAAO,EAAE;cAAA,OAAMR,iBAAiB,EAAvB;YAAA,CAAlC;YAA6D,KAAK,EAAER,MAAM,CAACiB;UAA3E,EADJ,EAEI,KAAC,MAAD;YAAQ,KAAK,EAAC,WAAd;YAA0B,OAAO,EAAE,mBAAM,CAAE,CAA3C;YAA6C,KAAK,EAAEjB,MAAM,CAACkB;UAA3D,EAFJ;QAAA,EAZJ;MAAA,EAFJ;IAAA;EADJ,EADJ;AAwBH,CAjCD;;AAmCA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC7BR,MAAM,EAAE;IACJS,IAAI,EAAE,CADF;IAEJC,OAAO,EAAE,EAFL;IAGJC,UAAU,EAAE;EAHR,CADqB;EAM7BV,KAAK,EAAE;IACHW,QAAQ,EAAE,EADP;IAEHC,cAAc,EAAE;EAFb,CANsB;EAU7BX,cAAc,EAAE;IACZY,KAAK,EAAE,GADK;IAEZC,QAAQ,EAAE,KAFE;IAGZC,MAAM,EAAE,KAHI;IAIZL,UAAU,EAAE,QAJA;IAKZM,cAAc,EAAE;EALJ,CAVa;EAiB7Bd,KAAK,EAAE;IACHW,KAAK,EAAE,KADJ;IAEHI,SAAS,EAAE,QAFR;IAGHN,QAAQ,EAAE;EAHP,CAjBsB;EAsB7BR,eAAe,EAAE;IACbe,aAAa,EAAE,KADF;IAEbL,KAAK,EAAE,MAFM;IAGbG,cAAc,EAAE,eAHH;IAIbG,iBAAiB,EAAE;EAJN;AAtBY,CAAlB,CAAf;AA8BA,eAAe9B,eAAf"},"metadata":{},"sourceType":"module"}